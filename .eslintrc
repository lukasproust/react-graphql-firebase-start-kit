{
  "extends": [
    "airbnb",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "prettier/react",
    "prettier/@typescript-eslint"
  ],
  "env": {
    "browser": true,
    "jest": true,
    "node": true
  },
  "settings": {
    "import/resolver": {
      "webpack": { "config": "webpack.config.js" },
      "typescript": {},
      "node": { "moduleDirectory": ["node_modules", "src"] }
    }
  },
  "rules": {
    "valid-jsdoc": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "prefer-destructuring": ["error", { "object": true, "array": false }],
    "import/prefer-default-export": "off",
    "react/jsx-no-literals": ["error", { "noStrings": false }],
    "react/no-string-refs": "error",
    "react/jsx-curly-brace-presence": "off",
    "import/no-extraneous-dependencies": [
      "error",
      { "devDependencies": ["**/__tests__/**", "**/__stories__/**"] }
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ],
    "react/prop-types": "off"
  },
  "overrides": [
    {
      "files": ["./src/**/*.ts", "./src/**/*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": { "project": "./tsconfig.json" },
      "settings": {
        "import/ignore": [".js"]
      },
      "plugins": ["@typescript-eslint"],
      "rules": {
        "@typescript-eslint/ban-ts-ignore": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-object-literal-type-assertion": "off",
        "react/jsx-filename-extension": [
          "error",
          { "extensions": [".js", ".tsx"] }
        ]
      }
    },
    {
      "files": ["./src/**/*.gql"],
      "parser": "babel-eslint",
      "rules": {
        "graphql/template-strings": [
          "error",
          {
            "env": "literal",
            "validators": [
              "FieldsOnCorrectType",
              "KnownArgumentNames",
              "KnownTypeNames",
              "NoUnusedVariables",
              "OverlappingFieldsCanBeMerged",
              "ScalarLeafs",
              "UniqueArgumentNames",
              "UniqueInputFieldNames",
              "UniqueVariableNames",
              "ValuesOfCorrectType",
              "VariablesAreInputTypes",
              "VariablesInAllowedPosition"
            ]
          }
        ],
        "graphql/required-fields": [
          "error",
          {
            "env": "literal",
            "requiredFields": ["id"]
          }
        ]
      }
    }
  ]
}
